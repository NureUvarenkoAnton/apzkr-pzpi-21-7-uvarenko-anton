РЕФЕРАТ

Пояснювальна записка до курсової роботи: 40 с., 8 рис., 5 табл., 3 додатки, 15 джерел.
ВИГУЛЬНИК, ВЛАСИК ТВАРИНИ, ТВАРИНА, КОРИСТУВАЧ, ГЕОГРАФІЧНЕ ПОЛОЖЕННЯ, ВИГУЛ.
Об’єктом дослідження є індустрія вигулу домашніх тварин, а саме актуальне на сьогоднішній день питання щодо процесу пошуку компетентних людей для на час вигулу.
Метою курсової роботи є розробка системи, яка є маркетплейсом і дозволяє власникам тварин зручно знаходити вигульника та планувати вигул домашньої тварини, а  вигульникам можливість зручно знаходити замовлення. Система надає можливість перегляду наявних вигульників і можливість створювати запит на вигул у конкретний час конкретному вигульнику. Крім того, система включає модуль візуалізації, який відображає розташування тварини на карті.
Методи розробки базуються на технологіях Golang та gin для створення серверної частини, MySQL як бази даних, golang bubbletea для розробки IoT-пристрою, Kotlin для розробки мобільного додатку.
У результаті роботи здійснено програмну реалізацію системи вигулу домашніх тварин та прототип пристрою локації тварини. Програмна система складається з сервера, мобільного додатку та IoT-пристрою.

ВСТУП

Область застосування результатів даної курсової роботи охоплює індустрію догляду за домашніми тваринами. Розробка мобільного застосунку-маркетплейсу спрямована на забезпечення зручного процесу пошуку і бронювання послуг для власників домашніх улюбленців, що є важливою складовою у сфері догляду за тваринами та покращення їхнього добробуту.
Актуальність роботи зумовлена зростаючими потребами сучасного суспільства в ефективному догляді за домашніми тваринами, особливо в умовах урбанізації та зростання зайнятості їхніх власників. Багато людей стикаються з проблемою браку часу для регулярних вигулів своїх улюбленців, що негативно впливає на їхнє здоров'я та добробут. Впровадження інноваційного рішення для пошуку та бронювання послуг вигулу допоможе оптимізувати цей процес, забезпечуючи належний догляд за тваринами та створюючи нові можливості для заробітку для людей, які надають такі послуги.
Метою курсової роботи є розробка інтегрованого мобільного застосунку-маркетплейсу для власників домашніх тварин та тих, хто готовий надавати послуги з вигулу. Система має забезпечувати зручний інтерфейс для взаємодії користувачів, можливість перегляду профілів вигульників, оцінювання та відгуків, здійснення бронювання в реальному часі, а також безпечні транзакції. Це сприятиме підвищенню рівня догляду за домашніми улюбленцями, покращенню їхнього здоров'я та добробуту, а також розвитку нових бізнес-можливостей у цій сфері.

1 ОБ’ЄКТ РОЗРОБКИ

1.1 Опис розділу
Розділ складається з опису об’єкту розробки та засобів програмної реалізації системи. Об'єкт розробки описується за допомогою Vision and Scope документу, який є важливим інструментом у процесі планування та розробки програмного забезпечення. Використання Vision and Scope допомагає визначити мету проекту, ключові вимоги та обмеження, а також встановити рамки та масштаб розробки. Це дозволяє забезпечити чітке розуміння цілей проекту як серед розробників, так і серед зацікавлених сторін, що, в свою чергу, сприяє ефективній координації роботи і успішному виконанню завдань.
1.2 Документ Vision and Scope
1 BUSINESS REQUIREMENTS
1.1 Background
В сучасному швидкоплинному світі власники домашніх тварин часто стикаються з труднощами, знаходячи час та ресурси, щоб забезпечити своїм пухнастим друзям необхідні щоденні прогулянки та соціалізацію. Це може призвести до проблем зі здоров'ям, поведінкою та зниженням загального добробуту тварини. Крім того, зростає попит на гнучкі можливості роботи, і багато людей шукають способи отримання доходу за межами традиційної зайнятості.
Спостерігається стійке зростання популярності домашніх тварин, обумовлене демографічними факторами, такими як збільшення віку вступу в шлюб, зниження рівня народжуваності та зростання доходів. Цей тренд створює сприятливі умови для процвітання бізнесу, пов'язаного з тваринами, і очікується, що він збережеться в найближчі роки.
Існуючі послуги вигулювання собак часто не мають зручності та доступності, яких бажають сучасні власники домашніх тварин. Традиційні методи, такі як рекомендації "з вуст в уста" або місцеві листівки, можуть бути трудомісткими та ненадійними. Існуючі додатки для вигулювання собак можуть запропонувати певний рівень зручності, але часто не мають таких функцій, як відстеження в режимі реального часу, безпечної обробки платежів та надійних інструментів зв'язку.
1.2 Business Opportunity
Програмна система для вигулювання собак представляє значну бізнес-можливість у межах зростаючої індустрії догляду за домашніми тваринами. Ринок послуг, пов'язаних з домашніми тваринами, відчуває суттєве зростання останніми роками, що зумовлено такими факторами:
Зростання кількості домашніх тварин: Кількість домогосподарств із домашніми тваринами стрімко зростає, статистика щодо власності на домашніх тварин свідчить, що понад 60% домогосподарств у США мають щонайменше одну домашню тварину.
Зміна демографії: Покоління міленіалів та Gen Z, відомі своєю технологічною обізнаністю та готовністю витрачати гроші на своїх домашніх тварин, стають основними власниками домашніх тварин.
Попит на зручність: Завантажений спосіб життя та триваліший робочий час створюють потребу в зручних та легкодоступних послугах догляду за домашніми тваринами.
Фокус на здоров'ї та добробуті домашніх тварин: Власники домашніх тварин все більше усвідомлюють важливість регулярних фізичних вправ та соціалізації для загального здоров'я та щастя своїх вихованців.
Додаток для вигулювання собак відповідає цим тенденціям, пропонуючи рішення, яке є:
Зручним та доступним: Забезпечує зручну платформу для планування прогулянок за запитом або заздалегідь.
Надійним та безпечним: Гарантує безпеку домашніх тварин за допомогою перевірки минулого вигульників та функцій відстеження в режимі реального часу.
Масштабованим та адаптованим: Розроблено для обслуговування зростаючої бази користувачів та виходу на нові ринки.
Скориставшись зростаючим попитом на зручні та надійні послуги догляду за домашніми тваринами, додаток для вигулювання собак має потенціал захопити значну частку ринку та отримати значний дохід за допомогою комісійних зборів за завершені прогулянки. Крім того, додаток може дослідити подальші можливості монетизації за допомогою преміум-функцій, партнерства з підприємствами, пов'язаними з домашніми тваринами, та цільової реклами.
Успіх додатка залежатиме від його здатності забезпечити безпроблемний користувацький досвід, побудувати довіру з власниками домашніх тварин та залучити кваліфікованих та надійних вигульників. Зосереджуючись на цих ключових напрямках, додаток може стати провідною платформою на ринку вигулювання собак та сприяти більш зручному та збагаченому досвіду як для власників домашніх тварин, так і для їхніх пухнастих друзів.
Основні конкуренты:
Rover: The Dog Walking App:Зручний застосунок з приємним інтерфейсом. Багатьом вигулювачам цей застосунок подобається через те, що вони можуть обирати зручні для них години роботи і ставити свою ціну.
Недоліком цього застосунку є завелика комісія для вигулювачів, через це вони ставлять ціну більшу порівняно з іншими застосунками і користувачі досить часто обирають щось інше. Також не існує веб сайту цього застосунку.
Pet walker: Мобільний застосунок для звітування своїх прогулянок із улюбленцем. 
Не є маркетплейсом.
PetSitter.com Dog Walking Website: Старий вебсайт для знаходження вигулювачів собак. Через те, що він довго знаходиться на ринку, має великий ступінь довіри.
Не має мобільного застосунку, що робить не завжди зручним вибором.
1.3 Business Objectives and Success Criteria
BO-1: Набрати значну базу власників домашніх тварин і вигулювачів.
BO-2: Збільшити кількість завершених прогулянок і створити прибуток, через комісію.
BO-3: Побудувати репутацію застосунку, якому можна довіряти.
BO-4: Підтримувати задоволеність користувачів на високому рівні.
SO-1: Кількість активних користувачів (власники домашніх тварин і вигулювачі) ~ 2000 після першого релізу
SO-2: Кількість завершених вигулювань ~ 400
SO-3: Кількість згенерованого доходу ~ 10000$
SO-4: Коефіцієнт залишення користувачів (retention rate) ~ 70%
SO-5: Коефіцієнт гарних відгуків ~ 70%
1.4 Customer or Market Needs
Власники домашніх тварин стикаються з кількома проблемами, коли йдеться про забезпечення регулярних прогулянок та соціалізації своїх улюбленців:
Обмеження часу: Завантажений графік часто ускладнює для власників домашніх тварин виділення достатньої кількості часу для щоденних прогулянок.
Відсутність ресурсів: Деякі власники домашніх тварин можуть не мати фізичної можливості або доступу до безпечних місць для прогулянок, щоб самостійно вигулювати своїх улюбленців.
Ненадійні варіанти догляду за домашніми тваринами: Традиційні методи пошуку прогулянників для тварин можуть бути ненадійними або незручними.
Турбота про безпеку домашніх тварин: Власники домашніх тварин хочуть бути впевнені, що їхні улюбленці в безпеці та під належним доглядом під час прогулянок.
Обмежена обізнаність про послуги прогулянки домашніх тварин: Деякі власники домашніх тварин можуть не знати про доступні варіанти допомоги з прогулянками.
Мобільний додаток для прогулянки домашніх тварин вирішує ці потреби, пропонуючи:
Зручну та доступну платформу для планування прогулянок: Власники домашніх тварин можуть легко бронювати прогулянки на замовлення або заздалегідь, відповідно до свого завантаженого графіка.
Базу кваліфікованих та надійних прогулянників для домашніх тварин: Перевірка минулого та відгуки користувачів гарантують, що власники домашніх тварин можуть довіряти особам, які піклуються про їхніх пухнастих друзів.
Можливість відстеження прогулянок в режимі реального часу: Власники домашніх тварин можуть контролювати пересування свого улюбленця та отримувати душевний спокій, знаючи його місцезнаходження.
Сприяння спілкуванню між власниками домашніх тварин та прогулянниками: Користувачі можуть легко повідомляти про свої уподобання та інструкції, забезпечуючи безпроблемну прогулянку.
Безпечну та прозору систему оплати: Користувачі можуть зручно та безпечно оплачувати прогулянки через додаток.
Крім того, додаток задовольняє потреби потенційних прогулянників для домашніх тварин, пропонуючи:
Гнучкі можливості роботи: Особи можуть встановлювати власний графік та працювати стільки, скільки бажають.
Можливість заробітку: Прогулянники для домашніх тварин можуть отримувати дохід безпосередньо через додаток на основі виконаних прогулянок.
Зв'язок з власниками домашніх тварин у своєму районі: Додаток допомагає прогулянникам для домашніх тварин знаходити клієнтів поблизу та створювати регулярний графік прогулянок.
Сприяння позитивному та корисному досвіду: Додаток сприяє почуттю спільноти та дозволяє прогулянникам для домашніх тварин спілкуватися з тваринами та надавати їм цінний догляд.
Задовольняючи ці потреби та забезпечуючи зручний, надійний та корисний досвід як для власників домашніх тварин, так і для прогулянників, додаток має потенціал значно покращити сферу догляду за домашніми тваринами та сприяти добробуту домашніх тварин та їхніх власників.
1.5 Business Risks
BR-1: Конкурентність: ринок застосунків для домашніх тварин є досить конкурентним
BR-2: Безпека даних та конфіденційність: Захист даних користувачів є критично важливим. Безпечне зберігання даних, їх шифрування та дотримання відповідних правил захисту даних є ключовими факторами.
BR-3: Технічні проблеми: Підтримка надійної та масштабованої платформи потребує постійної розробки та обслуговування для вирішення технічних проблем та забезпечення безперебійної роботи.
Для мінімізації цих ризиків команда розробників буде:
Впроваджувати надійні заходи безпеки: Проводити ретельні перевірки минулого собачників, пропонувати страхування тварин та надавати чіткі рекомендації щодо безпечних прогулянок.
Моніторинг відгуків користувачів: Активно збирати відгуки користувачів, оперативно вирішувати проблеми та впроваджувати покращення на основі даних про досвід користувачів.
2 VISION OF THE SOLUTION
2.1 Vision Statement
Стати провідною програмною платформою, яка допомагає бізнесу та людям створити світ, де кожна тварина отримує регулярні фізичні навантаження, соціалізацію та люблячу турботу, на яку вона заслуговує.
2.2 Major Features
MF-1: Реєстрація та авторизація. Власники тварин, адміністратори та вигульники мають можливість зареєструватись та увійти у свій профіль.
MF-2: Створення профілю домашньої тварини. Власники тварин мають можливість створити профіль домашньої тварини.
MF-3: Запит на вигул домашньої тварини у відповідний час. Власники тварин мають можливість запросити послугу вигулювання домашньої тварини вказавши яку тварину треба вигуляти, дату та час вигулу.
MF-4: Просмотр та прийняття запиту на вигул. Вигульники мають можливість продивлятися за фільтрами та приймати запити на вигул тварин.
MF-5: Трекінг положення тварини. Власники тварини завжди можуть продивитись положення їх улюбленця на карті. Вигульники можуть зробити відповідне тільки в процесі вигулу.
MF-6: Блокування користувачів. Адміністратори мають можливість блокувати користувачів.
MF-7: Система рейтингу. Власники тварин і вигульники можуть оцінити один одного після вигулу.
MF-8: Система оплати. Власники тварин можуть провести оплату за сервіс наданий вигульникам.
2.3 Assumptions and Dependencies
A-1: Попит на ринку: Існує достатній попит на ринку на зручне та надійне програмне рішення для вигулу собак серед підприємств та підприємців, що займаються доглядом за тваринами.
A-2: Впровадження технологій: Клієнти налаштовані на використання програмної платформи для управління своїми послугами з вигулу собак.
A-3: Відповідність правовим та регуляторним нормам: Додаток відповідає всім відповідним законам та нормам щодо захисту даних, безпеки тварин та ведення бізнесу.
D-1: Технічна інфраструктура: Додаток покладається на стабільну та безпечну технічну інфраструктуру, включаючи сервери, бази даних та системи обробки платежів.
D-2: Інструменти розробки мобільних додатків: Доступ та знання інструментів та фреймворків для розробки мобільних додатків як для платформ iOS, так і Android.
D-3: Постійне розвиток та підтримка: Необхідні постійні розробка та підтримка для вирішення технічних проблем, розширення функцій та забезпечення безперебійної роботи.
D-4: Партнерство та інтеграція: Потенційне партнерство з компаніями з страхування тварин, роздрібними продавцями товарів для тварин або іншими відповідними гравцями може підвищити цінність та охоплення програмного забезпечення.
3 SCOPE AND LIMITATIONS
3.1 Scope of Initial Release
Backend частина:
Реєстрація та авторизація користувачів з різними ролями.
Реєстрування тварин для власників.
Створення і прийняття запитів на вигул домашньої тварини.
Трекання положення тварини для власників (завжди).
Трекання положення для вигульників (тільки в процесі вигулу).
Залишення відгуку після вигулу.
Оплата.
Web частина:
Авторизація адміністраторів.
Створення акаунтів для інших адміністраторів.
Просмотр відгуків.
Блокування неадмінських акаунтів.
Mobile частина:
Реєстрація та авторизація власників тварин і вигульників.
Створення профілю тварини.
Створення та обробка запиту на вигул тварини.
Залишення відгуку після вигулу.
Показ положення тварини на карті (завжди, якщо користувач - власник тварин).
Показ положення тварини на карті (в процесі вигулу, якщо користувач - вигульник).
IoT частина:
Gps трекінг положення тварини та відсилання на сервер.
3.2 Scope of Subsequent Releases
Подальші релізи будуть спрямовані на розширення функціоналу та покращення функцій системи, з урахуванням отриманого досвіду та потреб користувачів. Основні елементи обсягу подальших релізів можуть включати:
Backend частинка:
Можливість вигульникам встановлювати свою ціну за вигул.
Прикріплення сертифікатів до профілю вигульників.
IoT частина:
Відео фіксування вигулу.
Web частина:
Більша кількість мов для локалізації.
Mobile частина:
Моніторинг показників здоров’я.
Пуш повідомлення.
3.3 Limitations and Exclusions
LE-1: Дресирування та корекція поведінки тварин: Додаток не призначений для діагностики або вирішення проблем з поведінкою тварин. Власникам тварин рекомендується звернутися до професійних дресирувальників для таких потреб.
LE-2: Страхування та покриття відповідальності: Хоча додаток може заохочувати собачників отримати страховку для тварин, він безпосередньо не надає та не гарантує жодних страхових полісів. Клієнти відповідають за забезпечення належного страхового покриття для свого бізнесу з вигулу собак.
LE-3: Обмеження налаштування: Хоча додаток пропонує можливості налаштування, він може не задовольнити всі конкретні вимоги клієнтів.
LE-4: Технічні обмеження: Функціональність додатка залежить від обмежень мобільних технологій та підключення до Інтернету. Перебої в роботі мережі або несправності пристроїв можуть порушити роботу сервісу.
4 BUSINESS CONTEXT
4.3 Operating Environment
Система буде працювати на будь яких пристроях у веб застосунку та буде мати програму на андроїд.
Сервер буде написано на Golang з використанням фреймворку go-chi. Будуть використовуватися бібліотеки validator/v10 для валідування даних, bcrypt для шифрування паролів, sqlc для роботою з базою даних, golang migrations для написання міграцій.
База даних буде MySQL.
Клієнтська частина буде працювати у браузері, мовою написання буде Golang, HTML, CSS. Для формування сторінок буде використовуватись tamplates пакет Golang, для зручної роботи з компонентами буде використовуватись бібліотека htmx.
IoT буде виступати клієнт написаний на Golang, який буде симулювати роботу девайсу. 
Для розробки мобільного застосунку буде використано мову Kotlin.
Користувачі будуть знаходитись у відповідних до сервера часових поясах. З’єднання буде стабільним через використання Amazon Web Services. 
Також для контейнеризації буде використано Docker, а для управління розгортанням, масштабуванням та управлінням контейнерів буде використано Kubernetes.
Система буде працювати цілодобово.
Дані генеруватимуться клієнтами та зберігатимуться на стороні сервера, зв’язуючи та об’єднуючи кілька документів і дозволяючи надсилати запити.

2 РОЗРОБКА ПРОГРАМНОЇ СИСТЕМИ

2.1 Опис структури бази даних.
Проектування бази даних було проведено за допомогою створення ER-моделі даних (рис 5.1). Діаграма складається з 4 основних сутностей: Користувачі (Users), Прогулянки (Walks), Рейтинги (Ratings), Тварини (Pets).
Сутності мають такі зв'язки:
користувачі-тварини (один до багатьох, один користувач може мати багато тварин, але тварина може мати одного власника).
користувачі-прогулянки (один до багатьох, користувач може мати багато прогулянок, але прогулянка може мати тільки одного користувача).
прогулянки-тварини ( багато до одного, одна тварина може мати багато прогулянок, але одна прогулянка може мати тільки одну тварину).
користувачі-рейтинг (один до багатьох, один користувач може мати багато рейтингів, але рейтинг може мати тільки одного користувача).
Програмна система як базу даних використовує MySQL. Забезпечувати роботу з базою даних буде mysql driver.
2.2 Опис загальної архітектури системи
2.2.1 Опис архітектури серверної частини
Архітектура серверної частини програмної системи представляє з себе чисту архітектуру написану на Golang з використанням gin пакета для раутінгу. Чиста архітектура імплементує 3-рівневу архітектуру: обробники, сервіси та рівень репозиторію, який використовую MySql драйвер. Сама система складається з 6 основних частин:
маршрути (routers): використовуються для спрямування отриманого на сервер запиту у відповідний контролер. Також використовують, необхідне для продовження у обробниках, проміжне програмне забезпечення;
обробники (handlers): використовуються для обробки та валідації отриманого на сервер запиту. Також у цій програмній системі взаємодіють з моделями, для внесення змін в базу даних, та використовують сервіси для складнішої бізнес логіки. На вхід приймають параметри, рядок запиту чи тіло запиту;
проміжне програмне забезпечення (middlewares): використовуються у проекті для перевірки на те, чи є користувач авторизованим, та чи надсилає він запит на відповідну до своєї ролі проміжну точку. Також використовуються для розшифровування імені користувача з JWT токену та передачі його далі, у контролер;
сервіси (services): використовується для проведення складніших розрахунків, або винесення з контролерів функціоналу, який повторюється. В системі наявні сервіси для рахування відстані за координатами, за допомогою формули гаверсинуса. Також в сервісах є рахування різниці між датами у годинах та приведення об’ємів до різних одиниць виміру.
допоміжні пакети (pkg): використовуються для збереження функцій, які декілька разів можна використати в системі.
репозиторій (repository): використовується для взаємодії з базою даних. За це все відповідає звичайний Mysql драйвер разом з базою даних Mongodb. До моделей можна звернутися у будь якій частині системи, що спрощує їх використання.
2.2.2 Побудова діаграм для серверу
Програмна система має 3 ролі користувачів: Звичайний користувач (User), Вигульник (Walker) та Адміністратор системи (Admin).
Взаємодію користувачів з системою представлено на діаграмі прецедентів (рис 4.1). За діаграмою було визначено необхідну функціональність системи та взаємодію ролей з нею.
Система має таку функціональність для користувачів:
Власник домашньої тварини. Може проводити реєстрацію та логін, додавати домашніх тварин, авторизувати ошийник домашньої тварини,  переглядати вигульників,  створювати запит на вигул, оцінювання вигульника.
Вигульник. Може проводити реєстрацію та логін, переглядати запити на вигул, та історію вигулів, змінювати стан запиту, оцінювати власника.
Адмін. Може робити все те, що робить власник домашньої тварини, а також переглядати всіх користувачів та блокувати їх.
Для проектування внутрішньої взаємодії компонентів системи було розроблено діаграму компонентів (рис. 7.1). Система серверу складається з таких компонентів: Репозитрія (Repository), Обробники (Handlers), Сервіси (Services), Проміжне ПЗ (Middlewares),  Маршрутизатори (Routers), Сервер API (APIServer), Pkg. Зовнішніми компонентами є База даних (Database), Клієнтський інтерфейс (Client) та Ошийник (IoT Device).
2.2.3 Взаємодія з іншими компонентами
Програмна система використовує REST для спілкування клієнтів з сервером. API складається з 24 кінцевих точок у 8 маршрутах (Додаток А). Кінцеві точки обробляють передачу даних між сервером та клієнтом, направляючи дані які надходять на сервер у відповідні функції. На сервері програмної системи для цього використовується звичайна маршрутизація у Golang gin зі створенням route path та передачею в них відповідних запитів. Запити з маршрутів передаються у обробники, де обробляються вхідні дані. Деякі кінцеві точки не містять жодної інформації на вхід, наприклад запит GET на “/users/self”, де відправляються дані користувача, який робить запит (користувач ідентифікується за id у jwt токені). Деякі кінцеві точки на сервері містять параметри тіла, як запит POST на “/user/login/”, який приймає 2 строки: “email” та “password”.
2.3 Опис програми для IoT пристрою
2.3.1 Опис архітектури
Архітектура програми представляє собою 3-рівневу архітектуру: представлення, обробка даних та доступ до даних.
представлення. В системі представлена консоллю, у яку виводиться поточний стан системи та результат запитів на відправку даних на сервер;;
обробка даних. В системі представлено за допомогою сервісів обробки. GpsService займається обробкою даних GPS модуля;
доступ до даних. В системі представлено за допомогою сервісів зв’язку з сервером. Вони комунікують через websocket з’єднання.
2.3.2 Побудова діаграм
Програма для IoT девайсу передбачає одноразове використання власником тварини (Default User) і подальше автоматичне функціонування. Система автоматично збирає дані про свою локацію і відправляє їх на сервер.
Взаємодію користувачів з системою представлено на діаграмі прецедентів (рис 2.1). За діаграмою було визначено необхідну функціональність програми та взаємодію ролей з нею.
Для розробки подальших функцій програми було розроблено UML діаграму діяльності (рис 2.3.2). Користувач має один шлях, який для звичайного використання має пройти без розгалуження активності.
Взаємодія компонентів програми представлено за допомогою UML діаграми взаємодії (рис 2.3.3). Взаємодія відбувається між мобільним додатком, девайсом та сервером.
Для проектування внутрішньої взаємодії компонентів системи було розроблено діаграму компонентів (рис. 2.3.4). Система серверу складається з таких компонентів: модуль блютуз комунікацій (bluetooth module), Сервісу авторизації (Auth service), GPS модуля (GPS module), Локального сховища (Local storage),  Сервіс websocket комунікацій (Websocket), Сервісу обробки позиції (Location service). Зовнішніми компонентами є Сервер (Server), та Мобільний застосунок (Mobile application).
2.3.3 Взаємодія з іншими компонентами
Програма взаємодіє з іншими компонентами системи завдяки WebSocket з'єднанню. За допомогою Bluetooth модулю мобільний застосунок передає ключ авторизації девайсу. За допомогою GPS модулю система дізнається про своє місцезнаходження і передає ці дані Location сервісу, котрий обробляє ці дані і за допомогою Websocket сервісу та з'єднанню передає ці дані на сервер.
2.4 Розробка мобільного застосунку
2.4.1 Опис архітектури
Архітектура програми представляє собою архітектурний патерн MVVM. Ця архітектура дає можливість легко прив’язувати дані та оновлювати їх у інтерфейсі за необхідності.
2.4.2 Побудова діаграм
Програма для мобільного пристрою передбачає використання пристрою тільки одним з трьох користувачів системи: користувачем (User)
Взаємодію користувача з системою представлено на діаграмі прецедентів (рис 2.4.1). За діаграмою було визначено необхідну функціональність програми та взаємодію ролі з нею.
Для розробки подальших функцій програми було розроблено UML діаграму діяльності (рис 2.4.2). Користувач має кілька шляхів, що відповідають за різні функції програми.
Залежність компонентів програми представлено за допомогою UML діаграми пакетів (рис 2.4.3).
Для проектування внутрішньої взаємодії компонентів системи було розроблено діаграму компонентів (рис. 2.4.4). Система серверу складається з таких компонентів: Часитна інтерфейсу користувча (UI), Компонент бізнес логіки (ViewModel), Репозиторій (Repository), Клієнт взаємодії з гугл картами (GoogleMapsApiClient), Http клієнт (HttpClient). Зовнішніми компонентами є Сервер (Server), Інтерфейс Google Карт (Google API).
2.4.3 Взаємодія з іншими компонентами
Програма взаємодіє з іншими компонентами системи завдяки HTTP запитам. За допомогою HTTP запитів програма передає на сервер дані для авторизації користувача, додавання, оновлення та видалення даних про тварину. Також за допомогою API Google maps відображається положення тварини на карті.
Отже, за допомогою цих технологій було встановлено з’єднання з сервером. Безпека запитів обумовлюється використанням JWT на основі акаунту користувача системи, а вхід в акаунт може бути проведений при першому запуску програми.

3 ЗАСТОСУВАННЯ ПРОГРАМНОЇ СИСТЕМИ

3.1	Встановлення серверу
Для запуску серверу необхідно відкрити папку з кодом серверу та запустити бінарний файл, після цього сервер буде запущено. Обмежень для пристрою немає.
3.2	Встановлення IoT програми
Для запуску IoT програми необхідно зайти у папку з кодом та запустити бінарний файл з терміналу, після цього відкриється TUI застосунок.
3.3	Встановлення мобільного додатку
Для встановлення мобільного додатку треба завантажити файл з розширенням .apk та встановити його. При першому запуску необхідно ввести дані користувача, після цього робити вхід потрібно раз на тиждень. Обмеження щодо пристрою: ОС Android 12.0+.

ВИСНОВКИ

На основі проведеного аналізу та вивчення потреб ринку було розроблено мобільний застосунок-маркетплейс для власників домашніх тварин та людей, які надають послуги з вигулу. Цей застосунок є важливою складовою у сфері догляду за тваринами, відповідаючи сучасним вимогам щодо зручності, ефективності та безпеки взаємодії між користувачами.
На основі чого розроблено:
Аналіз ринку та потреб користувачів: Виявлено недоліки існуючих систем для вигулу домашніх тварин, такі як обмеженість функціоналу, відсутність зручного способу бронювання та недостатня безпека для тварин.
Інноваційні технології: Використання сучасних ІТ-рішень, зокрема мобільних додатків, геолокації та інтернет-зв'язку, для створення більш ефективної та безпечної системи пошуку та бронювання послуг з вигулу.
Що розроблено:
Інтегрована система пошуку та бронювання послуг вигулу: Включає серверну та клієнтську частини, які забезпечують взаємодію користувачів, перегляд профілів вигульників, здійснення бронювання в реальному часі та відображення місцезнаходження тварин на карті.
Функціональні можливості системи: Електронна реєстрація користувачів, бронювання через мобільний додаток, забезпечення безпеки через перевірені профілі вигульників, адміністрування системи.
Що дозволяє розробка:
Оптимізація процесів догляду за тваринами: Завдяки автоматизації та використанню сучасних технологій, система дозволяє ефективніше організовувати вигул домашніх тварин, зменшуючи витрати часу власників та підвищуючи рівень обслуговування.
Підвищення безпеки та надійності: Використання перевірених профілів вигульників та системи відгуків забезпечує високий рівень безпеки та довіри між користувачами.
Зручність для користувачів: Можливість бронювання в реальному часі, перегляд доступних вигульників та їх розташування на карті робить процес вигулу тварин більш зручним та доступним.
Економічна вигода: Основним джерелом прибутку є надання послуг з погодинною або добовою оплатою, а також можливість введення тарифних планів для постійних клієнтів, що забезпечує стабільний дохід та економічну ефективність системи.
Таким чином, розроблений застосунок-маркетплейс є сучасним, безпечним та ефективним рішенням для догляду за домашніми тваринами, яке має значний потенціал для впровадження та подальшого розвитку у сфері догляду за тваринами.

ПЕРЕЛІК ДЖЕРЕЛ ПОСИЛАННЯ

Dog walking app. URL: https://www.rover.com/dog-walking-app/ (дата звернення: 16.06.2024).
 Pet sitter. URL: https://petsitter.com/ (дата звернення: 13.03.2024).
Річардс, М., Форд, Н. Основи архітектури програмного забезпечення: інженерний підхід. O'Reilly Media, 2020. - 432 с.
Документація мови Golang. URL: https://go.dev/doc/ (дата звернення: 10.05.2024).
Документація MySQL. URL: https://www.mysql.com/ (дата звернення: 11.05.2024).
Json Web Token введення. URL: https://jwt.io/introduction (дата звернення 29.03.2024).
Басс, Л., Клементс, П., Казман, Р. Архітектура програмного забезпечення на практиці, третє видання. Бостон: Addison-Wesley, 2012. - 640 с.
Гофмейстер, К., Кручтен, П., Норд, Р. Л., Оббінк, Г., Ран, А., Америка, П. Загальна модель проектування архітектури програмного забезпечення, виведена з п'яти промислових підходів // Журнал системного та програмного забезпечення. - 2007. - 80 (1): 106–126.
Kotlin документація. URL: https://kotlinlang.org/docs/home.html (дата звернення 24.05.2024).
Розробка для Андроїд. URL: https://developer.android.com/develop (дата звернення 24.05.2024).
Користування Google Maps Platform. URL: https://developers.google.com/maps/documentation?hl=en (дата звернення 28.05.2024).

ДОДАТОК А
Специфікація REST

Таблиця А.1 – Специфікація REST API
/auth/register – POST – Реєстрація користувача
/auth/login – POST – Авторизація користувача
/ws – GET – Pet – Відкриття вебсокєт з’єднання
/loginpet – POST – DefaultUser – Авторизація ошийника домашньої тварини
/profile/pet – POST – DefaultUser – Додати тварину
/profile/pet – PUT – DefaultUser – Оновити дані тварини
/profile/pets/ – GET – DefaultUser – Отримати своїх тварин
/profile/user – PUT – DefaultUser – Оновити дані користувача
/pet/ – GET – DefaultUser – Отримати дані конкретної тварини
/users/walkers – GET – DefaultUser – Отримати дані вигульників
/users – DELETE – DefaultUser – Видалити свої дані
/users/restore – PUT – DefaultUser – Відновити свій профіль
/users/admin/ – GET – AdminUser – Отримати дані користувача
/users/admin/ban – PUT – AdminUser – Заблокувати користувача
/users/admin – GET – AdminUser – Отримати дані користувачів за параметрами
/export – GET – AdminUser – Експортувати дані користувачів
/import – POST – AdminUser – Імпортувати дані користувачів
/walk/ – POST – DefaultUser – Створити запит на вигул
/walk/ – PUT – Walker – Оновити стан вигулу
/walk/ – GET – DefaultUser, Walker – Отримати дані про прогулянку
/walk/ – GET – AdminUser – Отримати дані про прогулянки за параметрами
/walk/self/ – GET – DefaultUser, Walker – Отримати дані про свої прогулянки
/rating – POST – DefaultUser, Walker – Поставити оцінку користувачу
/rating/ – GET – All – Отримати середню оцінку користувача

